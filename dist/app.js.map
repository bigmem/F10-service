{"version":3,"sources":["app.js"],"names":["app","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","usersRouter","listRouter","messageRouter","req","res","next","err","locals","message","error","get","status","render","module","exports"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;;;AALA;AAOA,MAAMA,GAAG,GAAG,uBAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,GAAG,CAACK,GAAJ,CAAQ,qBAAO,KAAP,CAAR;AACAL,GAAG,CAACK,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AACzBC,EAAAA,QAAQ,EAAE;AADe,CAAnB,CAAR;AAGAT,GAAG,CAACK,GAAJ,CAAQ,4BAAR,E,CACA;AACA;AACA;AACA;AACA;AACA;;AACAL,GAAG,CAACK,GAAJ,CAAQC,iBAAQI,MAAR,CAAeR,cAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaM,cAAb;AACAX,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBO,cAAlB;AACAZ,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiBQ,aAAjB;AACAb,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoBS,gBAApB,E,CAEA;;AACAd,GAAG,CAACK,GAAJ,CAAQ,UAAUU,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCA,EAAAA,IAAI,CAAC,yBAAY,GAAZ,CAAD,CAAJ;AACD,CAFD,E,CAIA;;AACAjB,GAAG,CAACK,GAAJ,CAAQ,UAAUa,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACrC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACf,GAAJ,CAAQsB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHqC,CAKrC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiB1B,GAAjB;eAEeA,G","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\n// import sassMiddleware from 'node-sass-middleware';\n\nimport indexRouter from './routes/index';\nimport usersRouter from './routes/users';\nimport listRouter from './routes/list';\nimport messageRouter from './routes/message';\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\n// app.use(sassMiddleware({\n//   src: path.join(__dirname, 'public'),\n//   dest: path.join(__dirname, 'public'),\n//   indentedSyntax: true, // true = .sass and false = .scss\n//   sourceMap: true\n// }));\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/list', listRouter);\napp.use('/message', messageRouter);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n\nexport default app;\n"],"file":"app.js"}